
import control.DrawMaps;
import control.FuncoesDiversas;
import control.ImportExportFile;
import java.awt.Point;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import models.Sensors;
import models.Targets;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author elive
 */
public class Visualizador extends javax.swing.JFrame {

    /**
     * Creates new form Visualizador
     */
    public Visualizador() {
        initComponents();
        setLookAndFeel("com.bulenkov.darcula.DarculaLaf");
    }

    //Variaveis
    private JFileChooser file;
    ArrayList<Sensors> sensors = new ArrayList<>();
    ArrayList<Targets> targets = new ArrayList<>();
    private int countSensors = 0;
    private int countTargets = 0;
    private int angulo = 360;
    private int distA = 50;
    private int distB = 450;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelView = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelConfig = new javax.swing.JPanel();
        panelTargets = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txNumTargets = new javax.swing.JTextField();
        btGenerateTargets = new javax.swing.JButton();
        panelSensors = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txNumSensors = new javax.swing.JTextField();
        btGenetareSensors = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txNumAngulo = new javax.swing.JTextField();
        txNumeroDistancia = new javax.swing.JTextField();
        chkRandomAngle2 = new javax.swing.JCheckBox();
        panelInsertView = new javax.swing.JPanel();
        chkEnableInsertion = new javax.swing.JCheckBox();
        rdSensors = new javax.swing.JRadioButton();
        rdTargets = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txAngulo = new javax.swing.JTextField();
        txDistancia = new javax.swing.JTextField();
        chkRandomAngle = new javax.swing.JCheckBox();
        panelVar = new javax.swing.JPanel();
        panelViews = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnOpenFile = new javax.swing.JMenuItem();
        mnSaveFile = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnClearAll = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmo genético para Cobertura e Redundância de Redes de Sensores Visuais Sem Fio");

        panelView.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelView.setPreferredSize(new java.awt.Dimension(500, 500));
        panelView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelViewMouseClicked(evt);
            }
        });
        panelView.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                panelViewKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelViewLayout = new javax.swing.GroupLayout(panelView);
        panelView.setLayout(panelViewLayout);
        panelViewLayout.setHorizontalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );
        panelViewLayout.setVerticalGroup(
            panelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panelTargets.setBorder(javax.swing.BorderFactory.createTitledBorder("Alvos"));

        jLabel1.setText("Numero de Alvos");

        txNumTargets.setText("30");

        btGenerateTargets.setText("Gerar Alvos");
        btGenerateTargets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGenerateTargetsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTargetsLayout = new javax.swing.GroupLayout(panelTargets);
        panelTargets.setLayout(panelTargetsLayout);
        panelTargetsLayout.setHorizontalGroup(
            panelTargetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTargetsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTargetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btGenerateTargets)
                    .addComponent(jLabel1)
                    .addComponent(txNumTargets, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelTargetsLayout.setVerticalGroup(
            panelTargetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTargetsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txNumTargets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btGenerateTargets)
                .addContainerGap())
        );

        panelSensors.setBorder(javax.swing.BorderFactory.createTitledBorder("Sensores"));

        jLabel2.setText("Numero de Sensores");

        txNumSensors.setText("10");

        btGenetareSensors.setText("Gerar Sensores");
        btGenetareSensors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGenetareSensorsActionPerformed(evt);
            }
        });

        jLabel5.setText("Distância");

        jLabel6.setText("Ângulo");

        txNumAngulo.setText("45");

        txNumeroDistancia.setText("80");

        chkRandomAngle2.setText("Ângulos Aleatórios");

        javax.swing.GroupLayout panelSensorsLayout = new javax.swing.GroupLayout(panelSensors);
        panelSensors.setLayout(panelSensorsLayout);
        panelSensorsLayout.setHorizontalGroup(
            panelSensorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSensorsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSensorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSensorsLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(51, 51, 51))
                    .addGroup(panelSensorsLayout.createSequentialGroup()
                        .addGroup(panelSensorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(btGenetareSensors)
                            .addGroup(panelSensorsLayout.createSequentialGroup()
                                .addGroup(panelSensorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txNumAngulo)
                                    .addComponent(txNumSensors, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txNumeroDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelSensorsLayout.createSequentialGroup()
                        .addComponent(chkRandomAngle2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelSensorsLayout.setVerticalGroup(
            panelSensorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSensorsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txNumSensors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSensorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSensorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txNumeroDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txNumAngulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkRandomAngle2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btGenetareSensors))
        );

        panelInsertView.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        chkEnableInsertion.setText("Habilitar Inserção por Click");

        buttonGroup1.add(rdSensors);
        rdSensors.setText("Sensores");

        buttonGroup1.add(rdTargets);
        rdTargets.setText("Alvos");

        jLabel3.setText("Ângulo");

        jLabel4.setText("Distância");

        txAngulo.setText("45");

        txDistancia.setText("70");

        chkRandomAngle.setText("Ângulos aleatórios");

        javax.swing.GroupLayout panelInsertViewLayout = new javax.swing.GroupLayout(panelInsertView);
        panelInsertView.setLayout(panelInsertViewLayout);
        panelInsertViewLayout.setHorizontalGroup(
            panelInsertViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInsertViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelInsertViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkEnableInsertion)
                    .addGroup(panelInsertViewLayout.createSequentialGroup()
                        .addGroup(panelInsertViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdSensors)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelInsertViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rdTargets)
                            .addComponent(jLabel4)))
                    .addGroup(panelInsertViewLayout.createSequentialGroup()
                        .addComponent(txAngulo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkRandomAngle))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        panelInsertViewLayout.setVerticalGroup(
            panelInsertViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInsertViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkEnableInsertion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInsertViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdSensors)
                    .addComponent(rdTargets))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInsertViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInsertViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txAngulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkRandomAngle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelConfigLayout = new javax.swing.GroupLayout(panelConfig);
        panelConfig.setLayout(panelConfigLayout);
        panelConfigLayout.setHorizontalGroup(
            panelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTargets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelSensors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelInsertView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelConfigLayout.setVerticalGroup(
            panelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConfigLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(panelTargets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSensors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelInsertView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Configuração", panelConfig);

        javax.swing.GroupLayout panelVarLayout = new javax.swing.GroupLayout(panelVar);
        panelVar.setLayout(panelVarLayout);
        panelVarLayout.setHorizontalGroup(
            panelVarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        panelVarLayout.setVerticalGroup(
            panelVarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Variaveis", panelVar);

        javax.swing.GroupLayout panelViewsLayout = new javax.swing.GroupLayout(panelViews);
        panelViews.setLayout(panelViewsLayout);
        panelViewsLayout.setHorizontalGroup(
            panelViewsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        panelViewsLayout.setVerticalGroup(
            panelViewsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 498, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Visualizar", panelViews);

        jMenu1.setText("File");

        mnOpenFile.setText("Open File");
        mnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnOpenFileActionPerformed(evt);
            }
        });
        jMenu1.add(mnOpenFile);

        mnSaveFile.setText("Save as File");
        mnSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnSaveFileActionPerformed(evt);
            }
        });
        jMenu1.add(mnSaveFile);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        mnClearAll.setText("Clear All");
        mnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnClearAllActionPerformed(evt);
            }
        });
        jMenu2.add(mnClearAll);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelView, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnOpenFileActionPerformed
        // TODO add your handling code here:

        //sensors = new ArrayList<>();
        //targets = new ArrayList<>();
        file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        file.addChoosableFileFilter(new FileNameExtensionFilter("*.txt", "txt"));
        file.setSelectedFile(new File("caso_teste.txt"));
        file.showOpenDialog(panelView);

        File f = file.getSelectedFile();

        if (f != null) {
            mnClearAllActionPerformed(evt);
            DrawMaps dm = new DrawMaps(panelView);
            ImportExportFile ie = new ImportExportFile(f);
            ie.openFile(sensors, targets);
            dm.paintTargets(targets);
            //dm.paintSensors(panelView, sensors);
            dm.paintSensors(sensors);
        } else {
            JOptionPane.showMessageDialog(panelView, "Arquivo inválido e/ou vazio...", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_mnOpenFileActionPerformed

    private void btGenerateTargetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGenerateTargetsActionPerformed
        // TODO add your handling code here:
        FuncoesDiversas fd = new FuncoesDiversas(distA, distB);
        DrawMaps dm = new DrawMaps(panelView);
        if (targets.isEmpty()) {
            fd.generateRandomTargets(targets, Integer.parseInt(txNumTargets.getText().trim()));
            dm.paintTargets(targets);
        } else {
            targets.clear();
            fd.generateRandomTargets(targets, Integer.parseInt(txNumTargets.getText().trim()));
            dm.paintTargets(targets);
            //btGenetareSensorsActionPerformed(evt);
        }


    }//GEN-LAST:event_btGenerateTargetsActionPerformed

    private void mnSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnSaveFileActionPerformed
        // TODO add your handling code here:
        file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        file.addChoosableFileFilter(new FileNameExtensionFilter("*.txt", "TEXT FILES", "txt"));
        file.setSelectedFile(new File("caso_teste.txt"));
        file.showSaveDialog(panelView);

        File f = file.getSelectedFile();

        if (f != null) {

            if (!sensors.isEmpty() || !targets.isEmpty()) {
                ImportExportFile ie = new ImportExportFile(f);
                ie.saveFile(sensors, targets);
            } else {
                if (sensors.isEmpty()) {
                    JOptionPane.showMessageDialog(panelView, "Lista de sensores está vazia...", "Erro",
                            JOptionPane.WARNING_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(panelView, "Lista de alvos está vazia...", "Erro",
                            JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_mnSaveFileActionPerformed

    private void mnClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnClearAllActionPerformed
        // TODO add your handling code here:
        panelView.repaint();
        targets.clear();
        sensors.clear();
        countSensors = 0;
        countTargets = 0;
    }//GEN-LAST:event_mnClearAllActionPerformed

    private void panelViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelViewMouseClicked
        // TODO add your handling code here:

        DrawMaps dm = new DrawMaps(panelView);
        FuncoesDiversas fd = new FuncoesDiversas(-angulo, angulo);

        if (chkEnableInsertion.isSelected()) {
            if (rdSensors.isSelected()) {
                Sensors s = new Sensors(countSensors, new Point(evt.getX(), evt.getY()),
                        fd.randomGenerateWitchCheckbox(chkRandomAngle, Integer.parseInt(txAngulo.getText().trim())),
                        Integer.parseInt(txDistancia.getText().trim()));
                sensors.add(s);
                countSensors++;
                dm.paintSingleSensor(s);
            }
            if (rdTargets.isSelected()) {
                Targets t = new Targets(countTargets, new Point(evt.getX(), evt.getY()));
                targets.add(t);
                countTargets++;
                dm.paintSingleTargets(t);
            }
        } else {

        }

    }//GEN-LAST:event_panelViewMouseClicked

    private void panelViewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_panelViewKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == 'c') {
            panelView.repaint();
            targets.clear();
            sensors.clear();
        }
    }//GEN-LAST:event_panelViewKeyPressed

    private void btGenetareSensorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGenetareSensorsActionPerformed
        // TODO add your handling code here:
        DrawMaps dm = new DrawMaps(panelView);
        ArrayList<Integer> vars = new ArrayList<>();
        vars.add(Integer.parseInt(txNumSensors.getText().trim()));
        vars.add(angulo);
        vars.add(Integer.parseInt(txNumeroDistancia.getText().trim()));

        if (sensors.isEmpty()) {
            FuncoesDiversas fd = new FuncoesDiversas(distA - 30, distB - 30);
            fd.generateRandomSensors(sensors, vars, chkRandomAngle2);
            dm.paintSensors(sensors);
        } else if (targets.isEmpty()) {
            sensors.clear();
            FuncoesDiversas fd = new FuncoesDiversas(distA, distB);
            fd.generateRandomSensors(sensors, vars, chkRandomAngle2);
            btGenerateTargetsActionPerformed(evt);
            //dm.paintTargets(targets);
            dm.paintSensors(sensors);
        } else {
            sensors.clear();
            FuncoesDiversas fd = new FuncoesDiversas(distA, distB);
            fd.generateRandomSensors(sensors, vars, chkRandomAngle2);
            dm.paintTargets(targets);
            dm.paintSensors(sensors);
        }


    }//GEN-LAST:event_btGenetareSensorsActionPerformed

    private void setLookAndFeel(String theme) {
        try {
            UIManager.setLookAndFeel(theme);
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception e) {
            System.out.println(e.getMessage());

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visualizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visualizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visualizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visualizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Visualizador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGenerateTargets;
    private javax.swing.JButton btGenetareSensors;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkEnableInsertion;
    private javax.swing.JCheckBox chkRandomAngle;
    private javax.swing.JCheckBox chkRandomAngle2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem mnClearAll;
    private javax.swing.JMenuItem mnOpenFile;
    private javax.swing.JMenuItem mnSaveFile;
    private javax.swing.JPanel panelConfig;
    private javax.swing.JPanel panelInsertView;
    private javax.swing.JPanel panelSensors;
    private javax.swing.JPanel panelTargets;
    private javax.swing.JPanel panelVar;
    private javax.swing.JPanel panelView;
    private javax.swing.JPanel panelViews;
    private javax.swing.JRadioButton rdSensors;
    private javax.swing.JRadioButton rdTargets;
    private javax.swing.JTextField txAngulo;
    private javax.swing.JTextField txDistancia;
    private javax.swing.JTextField txNumAngulo;
    private javax.swing.JTextField txNumSensors;
    private javax.swing.JTextField txNumTargets;
    private javax.swing.JTextField txNumeroDistancia;
    // End of variables declaration//GEN-END:variables
}
